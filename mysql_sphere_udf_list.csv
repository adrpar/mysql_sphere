"sdist","Returns the distance between two objects in radians. dist(SPoint, SPoint), dist(SCircle, SCircle), dist(SCircle, SPoint), dist(SPoint, SCircle)"
"sarea","Returns the area of a spherical object in square radians. sarea(SCircle), sarea(SPoly), sarea(SBox)"
"scenter","Returns the center of an object. scenter(SCircle), scenter(SEllipse)"
"scircum","Returns the circumference of an object. scircum(SCircle), scircum(SPoly), scircum(SBox)"
"slength","Returns the length of an object. slength(SLine), slength(SPath)"
"sswap","Changes the direction of sline or spath objects. sswap(SLine), sswap(SPath)"
"snpoints","Returns the number of points on spherical path or polygon. snpoints(SPoly), snpoints(SPath)"
"sstr","Returns a string representation of a mysql_sphere object. sstr(SPoint), sstr(SCircle), sstr(SLine), sstr(SEuler), sstr(SPoly), sstr(SPath), sstr(SEllipse), sstr(SBox)"
"mysql_sphere_version","Returns the version number of mysql_sphere."
"srcontainsl","Returns true if the left object is contained by the right object. srcontainsl(SBox, SBox), srcontainsl(SPoint, SBox), srcontainsl(SCircle, SBox), srcontainsl(SBox, SCircle), srcontainsl(SLine, SBox), srcontainsl(SEllipse, SBox), srcontainsl(SBox, SEllipse), srcontainsl(SPoly, SBox), srcontainsl(SBox, SPoly), srcontainsl(SPath, SBox), srcontainsl(SCircle, SCircle), srcontainsl(SPoint, SCircle), srcontainsl(SEllipse, SEllipse), srcontainsl(SPoint, SEllipse), srcontainsl(SCircle, SEllipse),	srcontainsl(SEllipse, SCircle), srcontainsl(SLine, SEllipse), srcontainsl(SPoint, SLine), srcontainsl(SLine, SCircle), srcontainsl(SPoint, SPath), srcontainsl(SPath, SCircle), srcontainsl(SPath, SEllipse), srcontainsl(SPath, SPoly), srcontainsl(SPoly, SPoly), srcontainsl(SPoint, SPoly), srcontainsl(SCircle, SPoly), srcontainsl(SPoly, SCircle), srcontainsl(SLine, SPoly), srcontainsl(SEllipse, SPoly), srcontainsl(SPoly, SEllipse)"
"slcontainsr","Returns true if the right object is contained by the left object. slcontainsr(SBox, SBox), slcontainsr(SBox, SPoint), slcontainsr(SBox, SCircle), slcontainsr(SCircle, SBox), slcontainsr(SBox, SLine), slcontainsr(SBox, SEllipse), slcontainsr(SEllipse, SBox), slcontainsr(SBox, SPoly), slcontainsr(SPoly, SBox), slcontainsr(SBox, SPath), slcontainsr(SCircle, SCircle), slcontainsr(SCircle, SPoint), slcontainsr(SEllipse, SEllipse), slcontainsr(SEllipse, SPoint), slcontainsr(SEllipse, SCircle), slcontainsr(SCircle, SEllipse), slcontainsr(SEllipse, SLine), slcontainsr(SLine, SPoint), slcontainsr(SCircle, SLine), slcontainsr(SPath, SPoint), slcontainsr(SCircle, SPath), slcontainsr(SEllipse, SPath), slcontainsr(SPoly, SPath), slcontainsr(SPoly, SPoly), slcontainsr(SPoly, SPoint), slcontainsr(SPoly, SCircle), slcontainsr(SCircle, SPoly), slcontainsr(SPoly, SLine), slcontainsr(SPoly, SEllipse), slcontainsr(SEllipse, SPoly)"
"srnotcontainsl","Returns true if the left object is not contained by the right object. srnotcontainsl(SBox, SBox), srnotcontainsl(SPoint, SBox), srnotcontainsl(SCircle, SBox), srnotcontainsl(SBox, SCircle), srnotcontainsl(SLine, SBox), srnotcontainsl(SEllipse, SBox), srnotcontainsl(SBox, SEllipse), srnotcontainsl(SPoly, SBox), srnotcontainsl(SBox, SPoly), srnotcontainsl(SPath, SBox), srnotcontainsl(SCircle, SCircle), srnotcontainsl(SPoint, SCircle), srnotcontainsl(SEllipse, SEllipse), srnotcontainsl(SPoint, SEllipse), srnotcontainsl(SCircle, SEllipse), srnotcontainsl(SEllipse, SCircle), srnotcontainsl(SLine, SEllipse), srnotcontainsl(SPoint, SLine), srnotcontainsl(SLine, SCircle), srnotcontainsl(SPoint, SPath), srnotcontainsl(SPath, SCircle), srnotcontainsl(SPath, SEllipse), srnotcontainsl(SPath, SPoly), srnotcontainsl(SPoly, SPoly), srnotcontainsl(SPoint, SPoly), srnotcontainsl(SCircle, SPoly), srnotcontainsl(SPoly, SCircle), srnotcontainsl(SLine, SPoly), srnotcontainsl(SEllipse, SPoly), srnotcontainsl(SPoly, SEllipse)"
"slnotcontainsr","Returns true if the right object is not contained by the left object. slnotcontainsr(SBox, SBox), slnotcontainsr(SBox, SPoint), slnotcontainsr(SBox, SCircle), slnotcontainsr(SCircle, SBox), slnotcontainsr(SBox, SLine), slnotcontainsr(SBox, SEllipse), slnotcontainsr(SEllipse, SBox), slnotcontainsr(SBox, SPoly), slnotcontainsr(SPoly, SBox), slnotcontainsr(SBox, SPath), slnotcontainsr(SCircle, SCircle), slnotcontainsr(SCircle, SPoint), slnotcontainsr(SEllipse, SEllipse), slnotcontainsr(SEllipse, SPoint), slnotcontainsr(SEllipse, SCircle), slnotcontainsr(SCircle, SEllipse), slnotcontainsr(SEllipse, SLine), slnotcontainsr(SLine, SPoint), slnotcontainsr(SCircle, SLine), slnotcontainsr(SPath, SPoint), slnotcontainsr(SCircle, SPath), slnotcontainsr(SEllipse, SPath), slnotcontainsr(SPoly, SPath), slnotcontainsr(SPoly, SPoly), slnotcontainsr(SPoly, SPoint), slnotcontainsr(SPoly, SCircle), slnotcontainsr(SCircle, SPoly), slnotcontainsr(SPoly, SLine), slnotcontainsr(SPoly, SEllipse), slnotcontainsr(SEllipse, SPoly)"
"soverlaps","Returns true if two objects are overlapping and false if not. soverlaps(object, object) supports every combination except SPoints"
"snotoverlaps","Returns true if two objects are not overlapping and false if they are. snotoverlaps(object, object) supports every combination except SPoints"
"sequal","Retruns true if two mysql_sphere objects are equal and false if not. sequal(SBox, SBox), sequal(SCircle, SCirlce), sequal(SEllipse, SEllipse), sequal(STransform, STransform), sequal(SLine, SLine), sequal(SPath, SPath), sequal(SPoint, SPoint), sequal(SPoly, SPoly)"
"snotequal","Retruns true if two mysql_sphere objects are not equal and false if they are. snotequal(SBox, SBox), snotequal(SCircle, SCirlce), snotequal(SEllipse, SEllipse), snotequal(STransform, STransform), snotequal(SLine, SLine), snotequal(SPath, SPath), snotequal(SPoint, SPoint), snotequal(SPoly, SPoly)"
"stransform","Transforms a given object according to an Euler transformation object. stransform(SCircle, STrans), stransform(SEllipse, STrans), stransform(STrans, STrans), stransform(SPoint, STrans), stransform(SLine, STrans), stransform(SPath, STrans), stransform(SPoly, STrans)"
"sinverse","Inverse transforms a given object according to an Euler transformation object. sinverse(SCircle, STrans), sinverse(SEllipse, STrans), sinverse(STrans, STrans), sinverse(SPoint, STrans), sinverse(SLine, STrans), sinverse(SPath, STrans), sinverse(SPoly, STrans)"
"spoint","Defines a point on a sphere. spoint(long, lat) or spoint(geom_string) or spoint(SPath, i)"
"spoint_long","Returns the longitude of a spoint object. spoint_long(SPoint)"
"spoint_lat","Returns the latitude of a spoint object. spoint_lat(SPoint)"
"spoint_x","Returns the x value of a spoint object. spoint_x(SPoint)"
"spoint_y","Returns the y value of a spoint object. spoint_y(SPoint)"
"spoint_z","Returns the z value of a spoint object. spoint_z(SPoint)"
"spoint_equal","Returns true if two spoint objects are equal and false if not. spoint_equal(SPoint, SPoint)"
"strans","Defines an Euler transformation on a sphere. A Euler transformation is done with three counterclockwise object rotations around the following axes: x-axis, y-axis, or z-axis. strans(phi, theta, psi) or strans(phi, theta, psi, trans_axis_string), strans(SLine), strans(SEllipse) or strans(trans_string)"
"strans_point","Transforms a given spoint objects according to an Euler transformation object. strans_point(SPoint, SEuler)"
"strans_point_inverse","Inverse transforms a given spoint objects according to an Euler transformation object. strans_point_inverse(SPoint, SEuler)"
"strans_equal","Returns true if two strans objects are equal and false if not. strans_equal(SEuler, SEuler)"
"strans_equal_neg","Returns true if tow strans objects are not equal and true if they are. strans_equal_neg(SEuler, SEuler)"
"strans_phi","Returns the first angle of a transformation object. strans_phi(SEuler)"
"strans_theta","Returns the second angle of a transformation object. strans_theta(SEuler)"
"strans_psi","Returns the third angle of a transformation object. strans_psi(SEuler)"
"strans_axes","Returns the transformation axes as a three letter code of a transformation object. strans_axes(SEuler)"
"strans_invert","Returns the inverse of a given Euler transformation. strans_invert(SEuler)"
"strans_zxz","Convert an Euler transformation into a ZXZ-axes transformation. strans_zxz(SEuler)"
"strans_trans","Transforms a given strans object according to an Euler transformation object. strans_trans(SEuler, SEuler)"
"strans_trans_inv","Inverse transforms a given strans object according to an Euler transformation object. strans_trans_inv(SEuler, SEuler)"
"scircle","Defines a circle on a sphere. scircle(spoint, rad), scircle(SPoint), scircle(SEllipse) or scircle(circle_string)"
"scircle_radius","Returns the radius of a scircle object. scircle_radius(SCircle)"
"scircle_equal","Returns true if two scircle objects are equal and false if not. scircle_equal(SCircle, SCircle)"
"scircle_equal_neg","Returns true if tow scircle objects are not equal and true if they are. scircle_equal_neg(SCircle, SCircle)"
"scircle_overlap","Returns true if two scircle objects overlap and false if they don't. scircle_overlap(SCircle, SCircle)"
"scircle_overlap_neg","Returns true if two scircle objects donot overlap eachother and false if they do. scircle_overlap_neg(SCircle, SCircle)"
"scircle_contained_by_circle","Returns true if the right scircle contains the left one and false if not. scircle_contained_by_circle(SCircle, SCircle)"
"scircle_contained_by_circle_neg","Returns true if the right scircle does not contain the left one and false if it does. scircle_contained_by_circle_neg(SCircle, SCircle)"
"scircle_contains_circle","Returns true if the left scircle contains the right one and false if not. scircle_contains_circle(SCircle, SCircle)"
"scircle_contains_circle_neg","Returns true if the left scircle does not contain the right one and false if it does. scircle_contains_circle_neg(SCircle, SCircle)"
"spoint_contained_by_circle","Returns true if a given spoint is containd by a scircle and false if not. spoint_contained_by_circle(SPoint, SCircle), spoint_contained_by_circle(SCircle, SPoint)"
"spoint_contained_by_circle_neg","Returns true if a given spoint is not containd by a scircle and false if it is. spoint_contained_by_circle_neg(SPoint, SCircle), spoint_contained_by_circle_neg(SCircle, SPoint)"
"spoint_contained_by_circle_com","Returns true if the right spoint is contained in the left scircle and false if not. spoint_contained_by_circle_com(SCircle, SPoint)"
"spoint_contained_by_circle_com_neg","Returns true if the right spoint is not contained in the left scircle and false if it is. spoint_contained_by_circle_com_neg(SCircle, SPoint)"
"strans_circle","Transforms a given scircle object according to an Euler transformation object. strans_circle(SCircle, SEuler)"
"strans_circle_inverse","Inverse transforms a given scircle object according to an Euler transformation object. strans_circle_inverse(SCircle, SEuler)"
"sline","Defines a line on a sphere. A spherical line is part of a great circle (meridian) that has a beginning and an end and hence, a direction. sline(SPoint, SPoint), sline(STrans, double), sline(SPoint) or sline(line_string)"
"smeridian","Returns a meridian line at a given longitude. smeridian(double)"
"sline_beg","Returns the beginning of a sline object. sline_beg(SLine)"
"sline_end","Returns the end of a sline object. sline_end(SLine)"
"sline_equal","Returns true if two sline objects are equal and false if not. sline_equal(SLine, SLine)"
"sline_equal_neg","Returns true if tow sline objects are not equal and true if they are. sline_equal_neg(SLine, SLine)"
"sline_turn","Turns the path of a sline object, preserving the bginning and end of the line. sline_turn(SLine)"
"sline_crosses","Returns true if two lines are crossing eachother and false if not. sline_crosses(SLine, SLine)"
"sline_crosses_neg","Returns true if two lines are not crossing eachother and false if they are. sline_crosses_neg(SLine, SLine)"
"sline_overlap","Returns true if two sline objects overlap and false if they don't. sline_overlap(SLine, SLine)"
"sline_contains_point","Returns true if a sline contains a spoint and false if not. sline_contains_point(SLine, SPoint), sline_contains_point(SPoint, SLine)"
"sline_contains_point_com","Returns true if the right sline contains the left spoint and false if not. sline_contains_point_com(SPoint, SLine)"
"sline_contains_point_neg","Returns true if a sline does not contain a spoint and false if it does. sline_contains_point_neg(SLine, SPoint), sline_contains_point_neg(SPoint, SLine)"
"sline_contains_point_com_neg","Returns true if the right sline does not contain the left spoint and false if it does. sline_contains_point_com_neg(SPoint, SLine)"
"strans_line","Transforms a given sline object according to an Euler transformation object. strans_line(SLine)"
"strans_line_inverse","Inverse transforms a given sline object according to an Euler transformation object. strans_line_inverse(SLine)"
"sline_overlap_circle","Returns true if a sline overlaps a scricle and false if not. sline_overlap_circle(SLine, SCircle), sline_overlap_circle(SCircle, SLine)"
"sline_overlap_circle_com","Returns true if the right sline overlaps the left scricle and false if not. sline_overlap_circle_com(SCircle, SLine)"
"sline_overlap_circle_neg","Returns true if a sline does not overlap a scricle and false if it does. sline_overlap_circle_neg(SLine, SCircle), sline_overlap_circle_neg(SCircle, SLine)"
"sline_overlap_circle_com_neg","Returns true if the right sline does not overlap the left scricle and false if it does. sline_overlap_circle_com_neg(SCircle, SLine)"
"scircle_contains_line","Returns true if a scircle contains a sline and false if not. scircle_contains_line(SCircle, SLine), scircle_contains_line(SLine, SCircle)"
"scircle_contains_line_com","Returns true if the right scircle contains the left sline and false if not. scircle_contains_line_com(SLine, SCircle)"
"scircle_contains_line_neg","Returns true if a scircle does not contain a sline and false if it does. scircle_contains_line_neg(SCircle, SLine), scircle_contains_line_neg(SLine, SCircle)"
"scircle_contains_line_com_neg","Returns true if the right scircle does not contain the left sline and false if it does. scircle_contains_line_com_neg(SLine, SCircle)"
"sellipse","Defines an ellipses on a sphere. Within mysql_sphere, ellipses are defined as: If the center of any spherical ellipse is the North Pole, the perpendicular projection into the x-y-plane gives an ellipse as in two-dimensional space. sellipse(SPoint, lrad, srad, inc), sellipse(SPoint), sellipse(SCircle), sellipse(ellipse_string)"
"sellipse_inc","Returns the major radius of a sellipse object. sellipse_inc(SEllipse)"
"sellipse_lrad","Returns the minor radius of a sellipse object. sellipse_lrad(SEllipse)"
"sellipse_srad","Returns the inclination of a sellipse object. sellipse_srad(SEllipse)"
"sellipse_equal","Returns true if two sellipse objects are equal and false if not. sellipse_equal(SEllipse, SEllipse)"
"sellipse_equal_neg","Returns true if tow sellipse objects are not equal and true if they are. sellipse_equal_neg(SEllipse, SEllipse)"
"sellipse_contains_ellipse","Returns true if a sellipse contains a sellipse and false if not. sellipse_contains_ellipse(SEllipse, SEllipse)"
"sellipse_contains_ellipse_neg","Returns true if a sellipse does not contain a sellipse and false if it does. sellipse_contains_ellipse_neg(SEllipse, SEllipse)"
"sellipse_contains_ellipse_com","Returns true if the right sellipse contains the left sellipse and false if not. sellipse_contains_ellipse_com(SEllipse, SEllipse)"
"sellipse_contains_ellipse_com_neg","Returns true if the right sellipse does not contain the left sellipse and false if it does. sellipse_contains_ellipse_com_neg(SEllipse, SEllipse)"
"sellipse_overlap_ellipse","Returns true if two sellipse objects overlap and false if they don't. sellipse_overlap_ellipse(SEllipse, SEllipse)"
"sellipse_overlap_ellipse_neg","Returns true if two sellipse objects donot overlap eachother and false if they do. sellipse_overlap_ellipse_neg(SEllipse, SEllipse)"
"sellipse_contains_point","Returns true if a sellipse contains a spoint and false if not. sellipse_contains_point(SEllipse, SPoint), sellipse_contains_point(SPoint, SEllipse)"
"sellipse_contains_point_neg","Returns true if a sellipse does not contain a spoint and false if it does. sellipse_contains_point_neg(SEllipse, SPoint), sellipse_contains_point_neg(SPoint, SEllipse)"
"sellipse_contains_point_com","Returns true if the right sellipse contains the left spoint and false if not. sellipse_contains_point_com(SPoint, SEllipse)"
"sellipse_contains_point_com_neg","Returns true if the right sellipse does not contain the left spoint and false if it does. sellipse_contains_point_com_neg(SPoint, SEllipse)"
"sellipse_contains_circle","Returns true if a sellipse contains a scircle and false if not. sellipse_contains_circle(SEllipse, SCircle), sellipse_contains_circle(SCircle, SEllipse)"
"sellipse_contains_circle_neg","Returns true if a sellipse does not contain a scircle and false if it does. sellipse_contains_circle_neg(SEllipse, SCircle), sellipse_contains_circle_neg(SCircle, SEllipse)"
"sellipse_contains_circle_com","Returns true if the right sellipse contains the left scircle and false if not. sellipse_contains_circle_com(SCircle, SEllipse)"
"sellipse_contains_circle_com_neg","Returns true if the right sellipse does not contain the left scircle and false if it does. sellipse_contains_circle_com_neg(SCircle, SEllipse)"
"scircle_contains_ellipse","Returns true if a scircle contains a sellipse and false if not. scircle_contains_ellipse(SCircle, SEllipse), scircle_contains_ellipse(SEllipse, SCircle)"
"scircle_contains_ellipse_neg","Returns true if a scircle does not contain a sellipse and false if it does. scircle_contains_ellipse_neg(SCircle, SEllipse), scircle_contains_ellipse_neg(SEllipse, SCircle)"
"scircle_contains_ellipse_com","Returns true if the right scircle contains the left sellipse and false if not. scircle_contains_ellipse_com(SEllipse, SCircle)"
"scircle_contains_ellipse_com_neg","Returns true if the right scircle does not contain the left sellipse and false if it does. scircle_contains_ellipse_com_neg(SEllipse, SCircle)"
"sellipse_overlap_circle","Returns true if a sellipse overlaps a scircle and false if not. sellipse_overlap_circle(SEllipse, SCircle), sellipse_overlap_circle(SCircle, SEllipse)"
"sellipse_overlap_circle_neg","Returns true if a sellipse does not overlaps a scircle and false if it does. sellipse_overlap_circle_neg(SEllipse, SCircle), sellipse_overlap_circle_neg(SCircle, SEllipse)"
"sellipse_overlap_circle_com","Returns true if the right sellipse overlaps the left scircle and false if not. sellipse_overlap_circle_com(SCircle, SEllipse)"
"sellipse_overlap_circle_com_neg","Returns true if the right sellipse does not overlaps the left scircle and false if it does. sellipse_overlap_circle_com_neg(SCircle, SEllipse)"
"sellipse_overlap_line","Returns true if a sellipse overlaps a scircle and false if not. sellipse_overlap_line(SEllipse, SLine), sellipse_overlap_line(SLine, SEllipse)"
"sellipse_overlap_line_neg","Returns true if a sellipse overlaps a scircle and false if not. sellipse_overlap_line_neg(SEllipse, SLine), sellipse_overlap_line_neg(SLine, SEllipse)"
"sellipse_overlap_line_com","Returns true if a sellipse overlaps a scircle and false if not. sellipse_overlap_line_com(SLine, SEllipse)"
"sellipse_overlap_line_com_neg","Returns true if a sellipse overlaps a scircle and false if not. sellipse_overlap_line_com_neg(SLine, SEllipse)"
"sellipse_contains_line","Returns true if a sellipse contains a sline and false if not. sellipse_contains_line(SEllipse, SLine), sellipse_contains_line(SLine, SEllipse)"
"sellipse_contains_line_neg","Returns true if a sellipse does not contain a sline and false if it does. sellipse_contains_line_neg(SEllipse, SLine), sellipse_contains_line_neg(SLine, SEllipse)"
"sellipse_contains_line_com","Returns true if the right sellipse contains the left sline and false if not. sellipse_contains_line_com(SLine, SEllipse)"
"sellipse_contains_line_com_neg","Returns true if the right sellipse does not contain the left sline and false if it does. sellipse_contains_line_com_neg(SLine, SEllipse)"
"strans_ellipse","Transforms a given sellipse object according to an Euler transformation object. strans_ellipse(SEllipse, SEuler)"
"strans_ellipse_inverse","Inverse transforms a given sellipse object according to an Euler transformation object. strans_ellipse_inverse(SEllipse, SEuler)"
"spoly","Defines a spherical path on a sphere. A spherical path is a concatination of spherical lines. spoly(polygon_string)"
"spoly_equal","Returns true if two spoly objects are equal and false if not. spoly_equal(SPoly, SPoly)"
"spoly_equal_neg","Returns true if two spoly objects are not equal and true if they are. spoly_equal_neg(SPoly, SPoly)"
"spoly_contains_polygon","Returns true if left spoly object contains right spoly and false if not. spoly_contains_polygon(SPoly, SPoly)"
"spoly_contains_polygon_neg","Returns true if left spoly object does not contains right spoly and false if it does. spoly_contains_polygon_neg(SPoly, SPoly)"
"spoly_contains_polygon_com","Returns true if right spoly object contains left spoly and false if not. contains_polygon_com(SPoly, SPoly)"
"spoly_contains_polygon_com_neg","Returns true if right spoly object does not contain left spoly and false if it does. spoly_contains_polygon_com_neg(SPoly, SPoly)"
"spoly_overlap_polygon","Returns true if two spoly objects overlap and false if they don't. spoly_overlap_polygon(SPoly, SPoly)"
"spoly_overlap_polygon_neg","Returns true if two spoly objects donot overlap eachother and false if they do. spoly_overlap_polygon_neg(SPoly, SPoly)"
"spoly_contains_point","Returns true if spoly contains spoint and false if not. spoly_contains_point(SPoly, SPoint), spoly_contains_point(SPoint, SPoly)"
"spoly_contains_point_neg","Returns true if spoly does not contain spoint and false if it does. spoly_contains_point_neg(SPoly, SPoint), spoly_contains_point_neg(SPoint, SPoly)"
"spoly_contains_point_com","Returns true if right spoly contains left spoint and false if not. spoly_contains_point_com(SPoint, SPoly)"
"spoly_contains_point_com_neg","Returns true if right spoly does not contain left spoint and false if it does. spoly_contains_point_com_neg(SPoint, SPoly)"
"spoly_contains_circle","Returns true if spoly contains scircle and false if not. spoly_contains_circle(SPoly, SCircle), spoly_contains_circle(SCircle, SPoly)"
"spoly_contains_circle_neg","Returns true if spoly does not contain scircle and false if it does. spoly_contains_circle_neg(SPoly, SCircle), spoly_contains_circle_neg(SCircle, SPoly)"
"spoly_contains_circle_com","Returns true if right spoly contains left scircle and false if not. spoly_contains_circle_com(SCircle, SPoly)"
"spoly_contains_circle_com_neg","Returns true if right spoly does not contain left scircle and false if it does. spoly_contains_circle_com_neg(SCircle, SPoly)"
"scircle_contains_polygon","Returns true if scircle contains spoly and false if not. scircle_contains_polygon(SCircle, SPoly), scircle_contains_polygon(SPoly, SCircle)"
"scircle_contains_polygon_neg","Returns true if scircle does not contain spoly and false if it does. scircle_contains_polygon_neg(SCircle, SPoly), scircle_contains_polygon_neg(SPoly, SCircle)"
"scircle_contains_polygon_com","Returns true if right scircle contains left spoly and false if not. scircle_contains_polygon_com(SPoly, SCircle)"
"scircle_contains_polygon_com_neg","Returns true if right scircle does not contain left spoly and false if it does. scircle_contains_polygon_com_neg(SPoly, SCircle)"
"spoly_overlap_circle","Returns true if spoly overlaps scircle and false if not. spoly_overlap_circle(SPoly, SCircle), spoly_overlap_circle(SCircle, SPoly)"
"spoly_overlap_circle_neg","Returns true if spoly does not overlap scircle and false if it does. spoly_overlap_circle_neg(SPoly, SCircle), spoly_overlap_circle_neg(SCircle, SPoly)"
"spoly_overlap_circle_com","Returns true if right spoly overlaps left scircle and false if not. spoly_overlap_circle_com(SCircle, SPoly)"
"spoly_overlap_circle_com_neg","Returns true if right spoly does not overlap left scircle and false if it does. spoly_overlap_circle_com_neg(SCircle, SPoly)"
"spoly_contains_line","Returns true if spoly contains sline and false if not. spoly_contains_line(SPoly, SLine), spoly_contains_line(SLine, SPoly)"
"spoly_contains_line_neg","Returns true if spoly does not contain sline and false if it does. spoly_contains_line_neg(SPoly, SLine), spoly_contains_line_neg(SLine, SPoly)"
"spoly_contains_line_com","Returns true if right spoly contains left sline and false if not. spoly_contains_line_com(SLine, SPoly)"
"spoly_contains_line_com_neg","Returns true if right spoly does not contain left sline and false if it does. spoly_contains_line_com_neg(SLine, SPoly)"
"spoly_overlap_line","Returns true if spoly overlaps sline and false if not. spoly_overlap_line(SPoly, SLine), spoly_overlap_line(SLine, SPoly)"
"spoly_overlap_line_neg","Returns true if spoly does not overlap sline and false if it does. spoly_overlap_line_neg(SPoly, SLine), spoly_overlap_line_neg(SLine, SPoly)"
"spoly_overlap_line_com","Returns true if right spoly overlaps left sline and false if not. spoly_overlap_line_com(SLine, SPoly)"
"spoly_overlap_line_com_neg","Returns true if right spoly does not overlap left sline and false if it does. spoly_overlap_line_com_neg(SLine, SPoly)"
"spoly_contains_ellipse","Returns true if spoly contains sellipse and false if not. spoly_contains_ellipse(SPoly, SEllipse), spoly_contains_ellipse(SEllipse, SPoly)"
"spoly_contains_ellipse_neg","Returns true if spoly does not contain sellipse and false if it does. spoly_contains_ellipse_neg(SPoly, SEllipse), spoly_contains_ellipse_neg(SEllipse, SPoly)"
"spoly_contains_ellipse_com","Returns true if right spoly contains left sellipse and false if not. spoly_contains_ellipse_com(SEllipse, SPoly)"
"spoly_contains_ellipse_com_neg","Returns true if right spoly does not contain left sellipse and false if it does. spoly_contains_ellipse_com_neg(SEllipse, SPoly)"
"sellipse_contains_polygon","Returns true if sellipse contains spoly and false if not. sellipse_contains_polygon(SEllipse, SPoly), sellipse_contains_polygon(SPoly, SEllipse)"
"sellipse_contains_polygon_neg","Returns true if sellipse does not contain spoly and false if it does. sellipse_contains_polygon_neg(SEllipse, SPoly), sellipse_contains_polygon_neg(SPoly, SEllipse)"
"sellipse_contains_polygon_com","Returns true if right sellipse contains left spoly and false if not. sellipse_contains_polygon_com(SPoly, SEllipse)"
"sellipse_contains_polygon_com_neg","Returns true if right sellipse does not contain left spoly and false if it does. sellipse_contains_polygon_com_neg(SPoly, SEllipse)"
"spoly_overlap_ellipse","Returns true if spoly overlaps sellispe and false if not. spoly_overlap_ellipse(SPoly, SEllipse), spoly_overlap_ellipse(SEllipse, SPoly)"
"spoly_overlap_ellipse_neg","Returns true if spoly does not overlap sellispe and false if it does. spoly_overlap_ellipse_neg(SPoly, SEllipse), spoly_overlap_ellipse_neg(SEllipse, SPoly)"
"spoly_overlap_ellipse_com","Returns true if right spoly overlaps left sellispe and false if not. spoly_overlap_ellipse_com(SEllipse, SPoly)"
"spoly_overlap_ellipse_com_neg","Returns true if right spoly does not overlap left sellispe and false if it does. spoly_overlap_ellipse_com_neg(SEllipse, SPoly)"
"strans_poly","Transforms a given spoly object according to an Euler transformation object. strans_poly(SPoly, SEuler)"
"strans_poly_inverse","Inverse transforms a given spoly object according to an Euler transformation object. strans_poly_inverse(SPoly, SEuler)"
"spoly_add_point_aggr","Aggregation function for adding spoints to an existing spoly. spoly_add_point_aggr(SPoly, SPoint)"
"spoly_aggr","Aggregation function for creating a new spoly from spoints. spoly_aggr(SPoint)"
"spath","Defines a polygon on a sphere. A spherical polygon is a closed spherical path where line segments cannot be crossed. spath(path_string)"
"spath_equal","Returns true if two sbox objects are equal and false if not. spath_equal(SPath, SPath)"
"spath_equal_neg","Returns true if tow sbox objects are not equal and true if they are. spath_equal_neg(SPath, SPath)"
"spath_overlap_path","Returns true if two spath objects overlap and false if they don't. spath_overlap_path(SPath, SPath)"
"spath_overlap_path_neg","Returns true if two spath objects donot overlap eachother and false if they do. spath_overlap_path_neg(SPath, SPath)"
"spath_contains_point","Returns true if spath contains spoint and false if not. spath_contains_point(SPath, SPoint), spath_contains_point(SPoint, SPath)"
"spath_contains_point_neg","Returns true if spath does not contains spoint and false if it does. spath_contains_point_neg(SPath, SPoint), spath_contains_point_neg(SPoint, SPath)"
"spath_contains_point_com","Returns true if right spath contains left spoint and false if not. spath_contains_point_com(SPoint, SPath)"
"spath_contains_point_com_neg","Returns true if right spath does not contains left spoint and false if it does. spath_contains_point_com_neg(SPoint, SPath)"
"scircle_contains_path","Returns true if scircle contains spath and false if not. scircle_contains_path(SCircle, SPath), scircle_contains_path(SPath, SCircle)"
"scircle_contains_path_neg","Returns true if scircle does not contains spath and false if it does. scircle_contains_path_neg(SCircle, SPath), scircle_contains_path_neg(SPath, SCircle)"
"scircle_contains_path_com","Returns true if right scircle contains left spath and false if not. scircle_contains_path_com(SPath, SCircle)"
"scircle_contains_path_com_neg","Returns true if right scircle does not contains left spath and false if it does. scircle_contains_path_com_neg(SPath, SCircle)"
"scircle_overlap_path","Returns true if scircle overlaps spath and false if not. scircle_overlap_path(SCircle, SPath), scircle_overlap_path(SPath, SCircle)"
"scircle_overlap_path_neg","Returns true if scircle does not overlap spath and false if it does. scircle_overlap_path_neg(SCircle, SPath), scircle_overlap_path_neg(SPath, SCircle)"
"scircle_overlap_path_com","Returns true if right scircle overlaps left spath and false if not. scircle_overlap_path_com(SPath, SCircle)"
"scircle_overlap_path_com_neg","Returns true if right scircle does not overlap left spath and false if it does. scircle_overlap_path_com_neg(SPath, SCircle)"
"spath_overlap_line","Returns true if spath overlaps sline and false if not. spath_overlap_line(SPath, SLine), spath_overlap_line(SLine, SPath)"
"spath_overlap_line_neg","Returns true if spath does not overlap sline and false if it does. spath_overlap_line_neg(SPath, SLine), spath_overlap_line_neg(SLine, SPath)"
"spath_overlap_line_com","Returns true if right spath overlaps left sline and false if not. spath_overlap_line_com(SLine, SPath)"
"spath_overlap_line_com_neg","Returns true if right spath does not overlap left sline and false if it does. spath_overlap_line_com_neg(SLine, SPath)"
"sellipse_contains_path","Returns true if sellipse contains spath and false if not. sellipse_contains_path(SEllipse, SPath), sellipse_contains_path(SPath, SEllipse)"
"sellipse_contains_path_neg","Returns true if sellipse does not contain spath and false if it does. sellipse_contains_path_neg(SEllipse, SPath), sellipse_contains_path_neg(SPath, SEllipse)"
"sellipse_contains_path_com","Returns true if right sellipse contains left spath and false if not. sellipse_contains_path_com(SPath, SEllipse)"
"sellipse_contains_path_com_neg","Returns true if right sellipse does not contain left spath and false if it does. sellipse_contains_path_com_neg(SPath, SEllipse)"
"sellipse_overlap_path","Returns true if sellipse overlaps spath and false if not. sellipse_overlap_path(SEllipse, SPath), sellipse_overlap_path(SPath, SEllipse)"
"sellipse_overlap_path_neg","Returns true if sellipse does not overlap spath and false if it does. sellipse_overlap_path_neg(SEllipse, SPath), sellipse_overlap_path_neg(SPath, SEllipse)"
"sellipse_overlap_path_com","Returns true if right sellipse overlaps left spath and false if not. sellipse_overlap_path_com(SPath, SEllipse)"
"sellipse_overlap_path_com_neg","Returns true if right sellipse does not overlap left spath and false if it does. sellipse_overlap_path_com_neg(SPath, SEllipse)"
"spoly_contains_path","Returns true if spoly contains spath and false if not. spoly_contains_path(SPoly, SPath), spoly_contains_path(SPath, SPoly)"
"spoly_contains_path_neg","Returns true if spoly does not contain spath and false if it does. spoly_contains_path_neg(SPoly, SPath), spoly_contains_path_neg(SPath, SPoly)"
"spoly_contains_path_com","Returns true if right spoly contains left spath and false if not. spoly_contains_path_com(SPath, SPoly)"
"spoly_contains_path_com_neg","Returns true if right spoly does not contain left spath and false if it does. spoly_contains_path_com_neg(SPath, SPoly)"
"spoly_overlap_path","Returns true if spoly overlaps spath and false if not. spoly_overlap_path(SPoly, SPath), spoly_overlap_path(SPath, SPoly)"
"spoly_overlap_path_neg","Returns true if spoly does not overlap spath and false if it does. spoly_overlap_path_neg(SPoly, SPath), spoly_overlap_path_neg(SPath, SPoly)"
"spoly_overlap_path_com","Returns true if right spoly overlaps left spath and false if not. spoly_overlap_path_com(SPath, SPoly)"
"spoly_overlap_path_com_neg","Returns true if right spoly does not overlap left spath and false if it does. spoly_overlap_path_com_neg(SPath, SPoly)"
"strans_path","Transforms a given spath object according to an Euler transformation object. strans_path(SPath, SEuler)"
"strans_path_inverse","Iverse transforms a given spath object according to an Euler transformation object. strans_path_inverse(SPath, SEuler)"
"spath_add_point_aggr","Aggregation function for adding spoints to an existing spath. spath_add_point_aggr(SPath, SPoint)"
"spath_aggr","Aggregation function for creating a new spath from spoints. spath_aggr(SPoint)"
"sbox","Defines a box on a sphere. A spehrical box is a coordinates range. Hence, you can select objects within a longitude range and latitude range. sbox(SPoint, SPoint), sbox(box_string)"
"sbox_sw","Returns the southwest point of a sbox object. sbox_sw(SBox)"
"sbox_se","Returns the southeast point of a sbox object. sbox_se(SBox)"
"sbox_nw","Returns the northwest point of a sbox object. sbox_nw(SBox)"
"sbox_ne","Returns the northeast point of a sbox object. sbox_ne(SBox)"
"sbox_equal","Returns true if two strans objects are equal and false if not. sbox_equal(SBox, SBox)"
"sbox_equal_neg","Returns true if tow strans objects are not equal and true if they are. sbox_equal_neg(SBox, SBox)"
"sbox_contains_box","Returns true if sbox contains sbox and false if not. sbox_contains_box(SBox, SBox)"
"sbox_contains_box_neg","Returns true if sbox does not contain sbox and false if it does. sbox_contains_box_neg(SBox, SBox)"
"sbox_contains_box_com","Returns true if right sbox contains left sbox and false if not. sbox_contains_box(SBox, SBox)"
"sbox_contains_box_com_neg","Returns true if right sbox does not contain left sbox and false if it does. sbox_contains_box_com_neg(SBox, SBox)"
"sbox_overlap_box","Returns true if two sbox objects overlap and false if they don't. sbox_overlap_box(SBox, SBox)"
"sbox_overlap_box_neg","Returns true if two sbox objects donot overlap eachother and false if they do. sbox_overlap_box_neg(SBox, SBox)"
"sbox_contains_point","Returns true if sbox contains spoint and false if not. sbox_contains_point(SBox, SPoint), sbox_contains_point(SPoint, SBox)"
"sbox_contains_point_neg","Returns true if sbox does not contain spoint and false if it does. sbox_contains_point_neg(SBox, SPoint), sbox_contains_point_neg(SPoint, SBox)"
"sbox_contains_point_com","Returns true if right sbox contains left spoint and false if not. sbox_contains_point_com(SPoint, SBox)"
"sbox_contains_point_com_neg","Returns true if right sbox does not contain left spoint and false if it does. sbox_contains_point_com_neg(SPoint, SBox)"
"sbox_contains_circle","Returns true if sbox contains scircle and false if not. sbox_contains_circle(SBox, SCircle), sbox_contains_circle(SCircle, SBox)"
"sbox_contains_circle_neg","Returns true if sbox does not contain scircle and false if it does. sbox_contains_circle_neg(SBox, SCircle), sbox_contains_circle_neg(SCircle, SBox)"
"sbox_contains_circle_com","Returns true if right sbox contains left scircle and false if not. sbox_contains_circle_com(SCircle, SBox)"
"sbox_contains_circle_com_neg","Returns true if right sbox does not contain left scircle and false if it does. sbox_contains_circle_com_neg(SCircle, SBox)"
"scircle_contains_box","Returns true if scircle contains sbox and false if not. scircle_contains_box(SCircle, SBox), scircle_contains_box(SBox, SCircle)"
"scircle_contains_box_neg","Returns true if scircle does not contain sbox and false if it does. scircle_contains_box_neg(SCircle, SBox), scircle_contains_box_neg(SBox, SCircle)"
"scircle_contains_box_com","Returns true if right scircle contains left sbox and false if not. scircle_contains_box_com(SBox, SCircle)"
"scircle_contains_box_com_neg","Returns true if right scircle does not contain left sbox and false if it does. scircle_contains_box_com_neg(SBox, SCircle)"
"sbox_overlap_circle","Returns true if sbox overlaps scircle and false if not. sbox_overlap_circle(SBox, SCircle), sbox_overlap_circle(SCircle, SBox)"
"sbox_overlap_circle_neg","Returns true if sbox does not overlap scircle and false if it does. sbox_overlap_circle_neg(SBox, SCircle), sbox_overlap_circle_neg(SCircle, SBox)"
"sbox_overlap_circle_com","Returns true if right sbox overlaps left scircle and false if not. sbox_overlap_circle_com(SCircle, SBox)"
"sbox_overlap_circle_com_neg","Returns true if right sbox does not overlap left scircle and false if it does. sbox_overlap_circle_com_neg(SCircle, SBox)"
"sbox_contains_line","Returns true if sbox contains sline and false if not. sbox_contains_line(SBox, SLine), sbox_contains_line(SLine, SBox)"
"sbox_contains_line_neg","Returns true if sbox does not contain sline and false if it does. sbox_contains_line_neg(SBox, SLine), sbox_contains_line_neg(SLine, SBox)"
"sbox_contains_line_com","Returns true if right sbox contains left sline and false if not. sbox_contains_line_com(SLine, SBox)"
"sbox_contains_line_com_neg","Returns true if right sbox does not contain left sline and false if it does. sbox_contains_line_com_neg(SLine, SBox)"
"sbox_overlap_line","Returns true if sbox overlaps sline and false if not. sbox_overlap_line(SBox, SLine), sbox_overlap_line(SLine, SBox)"
"sbox_overlap_line_neg","Returns true if sbox does not overlap sline and false if it does. sbox_overlap_line_neg(SBox, SLine), sbox_overlap_line_neg(SLine, SBox)"
"sbox_overlap_line_com","Returns true if right sbox overlaps left sline and false if not. sbox_overlap_line_com(SLine, SBox)"
"sbox_overlap_line_com_neg","Returns true if right sbox does not overlap left sline and false if it does. sbox_overlap_line_com_neg(SLine, SBox)"
"sbox_contains_ellipse","Returns true if sbox contains sline and false if not. sbox_contains_ellipse(SBox, SEllipse), sbox_contains_ellipse(SEllipse, SBox)"
"sbox_contains_ellipse_neg","Returns true if sbox does not contain sline and false if it does. sbox_contains_ellipse_neg(SBox, SEllipse), sbox_contains_ellipse_neg(SEllipse, SBox)"
"sbox_contains_ellipse_com","Returns true if right sbox contains left sline and false if not. sbox_contains_ellipse_com(SEllipse, SBox)"
"sbox_contains_ellipse_com_neg","Returns true if right sbox does not contain left sline and false if it does. sbox_contains_ellipse_com_neg(SEllipse, SBox)"
"sellipse_contains_box","Returns true if sbox contains sline and false if not. sellipse_contains_box(SEllipse, SBox), sellipse_contains_box(SBox, SEllipse)"
"sellipse_contains_box_neg","Returns true if sbox does not contain sline and false if it does. sellipse_contains_box_neg(SEllipse, SBox), sellipse_contains_box_neg(SBox, SEllipse)"
"sellipse_contains_box_com","Returns true if right sbox contains left sline and false if not. sellipse_contains_box_com(SBox, SEllipse)"
"sellipse_contains_box_com_neg","Returns true if right sbox does not contain left sline and false if it does. sellipse_contains_box_com_neg(SBox, SEllipse)"
"sbox_overlap_ellipse","Returns true if sbox overlaps sellipse and false if not. sbox_overlap_ellipse(SBox, SEllipse), sbox_overlap_ellipse(SEllipse, SBox)"
"sbox_overlap_ellipse_neg","Returns true if sbox does not overlap sellipse and false if it does. sbox_overlap_ellipse_neg(SBox, SEllipse), sbox_overlap_ellipse_neg(SEllipse, SBox)"
"sbox_overlap_ellipse_com","Returns true if right sbox overlaps left sellipse and false if not. sbox_overlap_ellipse_com(SEllipse, SBox)"
"sbox_overlap_ellipse_com_neg","Returns true if right sbox does not overlap left sellipse and false if it does. sbox_overlap_ellipse_com_neg(SEllipse, SBox)"
"sbox_contains_poly","Returns true if sbox contains sline and false if not. sbox_contains_poly(SBox, SPoly), sbox_contains_poly(SPoly, SBox)"
"sbox_contains_poly_neg","Returns true if sbox does not contain sline and false if it does. sbox_contains_poly_neg(SBox, SPoly), sbox_contains_poly_neg(SPoly, SBox)"
"sbox_contains_poly_com","Returns true if right sbox contains left sline and false if not. sbox_contains_poly_com(SPoly, SBox)"
"sbox_contains_poly_com_neg","Returns true if right sbox does not contain left sline and false if it does. sbox_contains_poly_com_neg(SPoly, SBox)"
"spoly_contains_box","Returns true if sbox contains sline and false if not. spoly_contains_box(SPoly, SBox), spoly_contains_box(SBox, SPoly)"
"spoly_contains_box_neg","Returns true if sbox does not contain sline and false if it does. spoly_contains_box_neg(SPoly, SBox), spoly_contains_box_neg(SBox, SPoly)"
"spoly_contains_box_com","Returns true if right sbox contains left sline and false if not. spoly_contains_box_com(SBox, SPoly)"
"spoly_contains_box_com_neg","Returns true if right sbox does not contain left sline and false if it does. spoly_contains_box_com_neg(SBox, SPoly)"
"sbox_overlap_poly","Returns true if sbox overlaps spoly and false if not. sbox_overlap_poly(SBox, SPoly), sbox_overlap_poly(SPoly, SBox)"
"sbox_overlap_poly_neg","Returns true if sbox does not overlap spoly and false if it does. sbox_overlap_poly_neg(SBox, SPoly), sbox_overlap_poly_neg(SPoly, SBox)"
"sbox_overlap_poly_com","Returns true if right sbox overlaps left spoly and false if not. sbox_overlap_poly_com(SPoly, SBox)"
"sbox_overlap_poly_com_neg","Returns true if right sbox does not overlap left spoly and false if it does. sbox_overlap_poly_com_neg(SPoly, SBox)"
"sbox_contains_path","Returns true if sbox contains sline and false if not. sbox_contains_path(SBox, SPath), sbox_contains_path(SPath, SBox)"
"sbox_contains_path_neg","Returns true if sbox does not contain sline and false if it does. sbox_contains_path_neg(SBox, SPath), sbox_contains_path_neg(SPath, SBox)"
"sbox_contains_path_com","Returns true if right sbox contains left sline and false if not. sbox_contains_path_com(SPath, SBox)"
"sbox_contains_path_com_neg","Returns true if right sbox does not contain left sline and false if it does. sbox_contains_path_com_neg(SPath, SBox)"
"sbox_overlap_path","Returns true if sbox overlaps spath and false if not. sbox_overlap_path(SBox, SPath), sbox_overlap_path(SPath, SBox)"
"sbox_overlap_path_neg","Returns true if sbox does not overlap spath and false if it does. sbox_overlap_path_neg(SBox, SPath), sbox_overlap_path_neg(SPath, SBox)"
"sbox_overlap_path_com","Returns true if right sbox overlaps left spath and false if not. sbox_overlap_path_com(SPath, SBox)"
"sbox_overlap_path_com_neg","Returns true if right sbox does not overlap left spath and false if it does. sbox_overlap_path_com_neg(SPath, SBox)"
